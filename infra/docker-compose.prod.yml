name: leeway-prod

services:
  # OSRM is expected to be managed externally on the droplet.
  # To avoid conflicts and accidental data loss, we disable the compose-managed OSRM here.
  # If you intentionally want to run OSRM via compose, uncomment this block AND provide
  # the appropriate command/volumes for your .osrm dataset.
  # osrm-routing:
  #   container_name: osrm-routing
  #   image: osrm/osrm-backend:v5.24.0
  #   ports:
  #     - "5000:5000"
  #   restart: unless-stopped

  redis:
    container_name: leeway-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    container_name: leeway-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file:
      - ./.env.prod
      # Non-secret tuning flags for clustering/OSRM
      - ./clustering.flags
    ports:
      - "8000:8000"
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - leeway-data:/srv/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Limit Uvicorn workers/threads to prevent CPU thrash on small VPS
      UVICORN_WORKERS: "1"
      UVICORN_THREADS: "1"

  worker:
    container_name: leeway-worker
    build:
      context: ../backend
      dockerfile: Dockerfile.worker
    env_file:
      - ./.env.prod
      # Non-secret tuning flags for clustering/OSRM
      - ./clustering.flags
    depends_on:
      - redis
      - backend
    restart: unless-stopped
    volumes:
      - leeway-data:/srv/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Limit Celery worker concurrency to avoid oversubscription
      CELERY_CONCURRENCY: "1"

  frontend:
    container_name: leeway-frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env.prod
    environment:
      # Ensure frontend talks directly to internal backend to avoid Cloudflare 524
      PROJECT_BACKEND_URL: http://backend:8000
      NEXT_PUBLIC_API_BASE: http://backend:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

networks:
  default:
    name: leeway-net
    external: true

volumes:
  leeway-data:
    name: leeway-data
